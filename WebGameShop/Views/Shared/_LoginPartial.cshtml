@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}

<style>
    /* Style cho navbar và icon user */
    .navbar-nav {
        font-family: 'Orbitron', sans-serif;
    }

    .nav-item.dropdown {
        position: relative;
    }

    .nav-link {
        color: white !important;
        cursor: pointer;
        transition: color 0.3s;
        display: flex;
        align-items: center;
    }

        .nav-link:hover {
            color: #e53935 !important;
        }

    /* Tăng kích thước icon */
    .mbr-iconfont.mbr-iconfont-btn {
        font-size: 24px !important;
        margin-left: 5px;
    }

    /* Modal custom */
    .custom-modal {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0);
        background: rgba(23, 26, 33, 0.1); 
        padding: 20px;
        border-radius: 10px; 
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
        z-index: 1001;
        flex-direction: column;
        gap: 10px;
        width: 300px;
        text-align: center;
        backdrop-filter: blur(5px); 
    }

        .custom-modal.show {
            display: flex;
            transform: translate(-50%, -50%) scale(1);
        }

        .custom-modal a {
            display: block;
            padding: 10px 20px;
            color: white !important; 
            background: black; 
            text-decoration: none;
            border-radius: 50px; 
            font-family: 'Orbitron', sans-serif;
            font-size: 18px;
            transition: background 0.3s;
        }

            .custom-modal a:hover {
                background: #171a21; /* Giữ hiệu ứng hover */
                color: white;
            }

    /* Overlay */
    .modal-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1000;
    }

        .modal-overlay.show {
            display: block;
        }
</style>

<ul class="navbar-nav" style="font-family:'Orbitron', sans-serif;">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link" style="font-family: 'Orbitron', sans-serif;"
               onmouseenter="showModal()" onmouseleave="delayHideModal()">
                Xin Chào @(user.UserName)
                <span class="mobi-mbri mobi-mbri-user-2 mbr-iconfont mbr-iconfont-btn"></span>
            </a>
        </li>
    }
    else
    {
        <li class="nav-item dropdown">
            <a class="nav-link" style="font-family: 'Orbitron', sans-serif;"
               onmouseenter="showModal()" onmouseleave="delayHideModal()">
                <span class="mobi-mbri mobi-mbri-user-2 mbr-iconfont mbr-iconfont-btn"></span>
            </a>
        </li>
    }
</ul>

<!-- Modal -->
<div class="modal-overlay" id="modalOverlay" onmouseenter="clearHideTimeout()" onmouseleave="delayHideModal()" style="font-family:'Orbitron', sans-serif;"></div>
<div class="custom-modal" id="customModal" onmouseenter="clearHideTimeout()" onmouseleave="delayHideModal()" style="font-family:'Orbitron', sans-serif;">
    @if (SignInManager.IsSignedIn(User))
    {
        <a asp-area="Identity" asp-page="/Account/Logout">Đăng Xuất</a>
    }
    else
    {
        <a asp-area="Identity" asp-page="/Account/Register">Đăng Ký</a>
        <a asp-area="Identity" asp-page="/Account/Login">Đăng Nhập</a>
    }
</div>

<script>
    let hideTimeout;

    function showModal() {
        clearTimeout(hideTimeout);
        document.getElementById('customModal').classList.add('show');
        document.getElementById('modalOverlay').classList.add('show');
    }

    function delayHideModal() {
        clearTimeout(hideTimeout);
        hideTimeout = setTimeout(() => {
            document.getElementById('customModal').classList.remove('show');
            document.getElementById('modalOverlay').classList.remove('show');
        }, 300);
    }

    function clearHideTimeout() {
        clearTimeout(hideTimeout);
    }

    // Ẩn modal khi click ra ngoài
    document.addEventListener('click', function (event) {
        const modal = document.getElementById('customModal');
        const overlay = document.getElementById('modalOverlay');
        const dropdown = event.target.closest('.nav-item.dropdown');

        if (!dropdown && modal.classList.contains('show')) {
            modal.classList.remove('show');
            overlay.classList.remove('show');
        }
    });
</script>